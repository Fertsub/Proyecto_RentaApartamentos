@{
    ViewData["Title"] = "Queja_Solicitud";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card shadow-sm border-0 mt-4">
    <div class="card-header bg-dark text-white">
        <h3 class="mb-0">Quejas y Solicitudes</h3>
    </div>
    <div class="card-body bg-light">

        @(Html.DevExtreme().DataGrid<ProyectoF_FabioCalix_CristopherFlores.Models.Queja_Solicitud>()
        .DataSource(ds => ds.WebApi()
            .Controller("Queja_Solicitud")
            .LoadAction("Get")
            .InsertAction("Post")
            .UpdateAction("Put")
            .DeleteAction("Delete")
            .Key("id")
        )
        .RemoteOperations(true)
        .GroupPanel(gp => gp.Visible(true))
        .FilterRow(f => f.Visible(true))
        .HeaderFilter(h => h.Visible(true))
        .Columns(columns => {

            columns.AddFor(m => m.id)
            .AllowEditing(false)
            .Visible(false);

            columns.Add().Caption("Dirección Apartamento")
                .CalculateCellValue(@<text>function(data) {
                    return data.Apartamento?.Direccion || "";
                }</text>)
                .AllowEditing(false);

            columns.AddFor(m => m.Descripcion).AllowEditing(false);

            columns.AddFor(m => m.Estado)
            .Caption("Estado")
            .CellTemplate(
                new JS(@"function(container, options) {
                    var text = options.value ? 'Revisado' : 'Pendiente';
                    container.text(text);
                }")
            );
        })
        .ShowBorders(true)
        .FilterRow(f => f.Visible(true))
        .HeaderFilter(f => f.Visible(true))
        .GroupPanel(p => p.Visible(true))
        .Width("100%")
        .Height(600)
        .Editing(e => e
            .UseIcons(true)
            .AllowUpdating(true)
            .AllowDeleting(true)
        )
    )

    </div>
</div>

