@{
    ViewData["Title"] = "Garante";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card shadow-sm border-0 mt-4">
    <div class="card-header bg-dark text-white">
        <h3 class="mb-0">Garantes</h3>
    </div>
    <div class="card-body bg-light">

        @(Html.DevExtreme().DataGrid<ProyectoF_FabioCalix_CristopherFlores.Models.Garante>()
        .DataSource(ds => ds.WebApi()
            .Controller("Garante")
            .LoadAction("Get")
            .InsertAction("Post")
            .UpdateAction("Put")
            .DeleteAction("Delete")
            .Key("id")
        )
        .RemoteOperations(false)
        .ShowBorders(true)
        .GroupPanel(gp => gp.Visible(true))
        .FilterRow(f => f.Visible(true))
        .HeaderFilter(h => h.Visible(true))
        .Columns(columns => {

            columns.AddFor(m => m.id).Visible(false);

            columns.AddFor(m => m.dni)
                .Caption("DNI");

            columns.AddFor(m => m.nombres)
                .Caption("Nombres");

            columns.AddFor(m => m.apellidos)
                .Caption("Apellidos");

            columns.AddFor(m => m.telefono)
                .Caption("Teléfono");

            columns.AddFor(m => m.email)
                .Caption("Correo Electrónico");

            columns.AddFor(m => m.docAval)
                .Caption("Tipo de Documento de Aval")
                .Lookup(lookup => lookup
                    .DataSource(new[] {
                        new { ID = "Boleta de Pago", Name = "Boleta de Pago" },
                        new { ID = "Escritura Pública", Name = "Escritura Pública" },
                        new { ID = "Constancia de Ingresos", Name = "Constancia de Ingresos" },
                        new { ID = "Recibo de Servicios", Name = "Recibo de Servicios" }
                    })
                    .ValueExpr("ID")
                    .DisplayExpr("Name")
                );

            columns.AddFor(m => m.emisionDoc)
                .Caption("Fecha de Emisión")
                .DataType(GridColumnDataType.Date);

        })
        .Editing(e => e
            .Mode(GridEditMode.Popup)
            .UseIcons(true)
            .AllowAdding(true)
            .AllowUpdating(true)
            .AllowDeleting(true)
        )
    )

    </div>
</div>

